version: 0.2

phases:
  build:
    commands:
      - export base=$(pwd)
      - curl --silent --location -o /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v1.13.7/bin/linux/amd64/kubectl
      - chmod +x /usr/local/bin/kubectl
      - curl --silent --location "https://github.com/weaveworks/eksctl/releases/download/latest_release/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
      - mv -v /tmp/eksctl /usr/local/bin
      - eksctl version
      - eksctl create cluster -f cluster.yaml || true
      - aws eks update-kubeconfig --name {{ name }}
      {%- if addons['toghelm'] %}
      - export helmdir=$base/addons/toghelm
      - wget https://get.helm.sh/helm-v2.15.2-linux-amd64.tar.gz
      - tar -zxvf helm-v2.15.2-linux-amd64.tar.gz
      - mv linux-amd64/helm /usr/local/bin/helm
      - kubectl apply -f $helmdir/helm_rbac.yaml
      - kubectl create serviceaccount --namespace kube-system tiller || true
      - kubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:tiller || true
      - helm init --tiller-namespace kube-system --service-account tiller --wait
      - helm version
    {%- endif -%}
    {%- if addons['toghpa'] %}
      - kubectl apply -f  addons/namespaces/
      - kubectl config set-context --current --namespace=kube-system
      - helm install stable/metrics-server --name metrics-server --version 2.0.4 --namespace metrics || true
      - kubectl get apiservice v1beta1.metrics.k8s.io -o yaml || true
    {%- endif -%}
    {%- if addons['togca'] %}
      - STACK_NAME=$(eksctl get nodegroup --cluster "$name" -o json | jq -r '.[].StackName')
      - INSTANCE_PROFILE_ARN=$(aws cloudformation describe-stacks --stack-name $STACK_NAME | jq -r '.Stacks[].Outputs[] | select(.OutputKey=="InstanceProfileARN") | .OutputValue')
      - ROLE_NAME=$(aws cloudformation describe-stacks --stack-name $STACK_NAME | jq -r '.Stacks[].Outputs[] | select(.OutputKey=="InstanceRoleARN") | .OutputValue' | cut -f2 -d/)
      - ls -la $base/addons/togca
      - aws iam put-role-policy --role-name $ROLE_NAME --policy-name ASG-Policy-For-Worker --policy-document file://$base/addons/togca/asg-policy.json
      - cd $base/addons/togca
      - export ASG_NAME=$(aws autoscaling describe-auto-scaling-groups --query 'AutoScalingGroups[].[AutoScalingGroupName]' --output text | grep eksctl-"$name")
      - export AWS_DEFAULT_REGION=us-west-2
      - envsubst <cluster-autoscaler.yml.template >cluster-autoscaler.yml
      - kubectl apply -f cluster-autoscaler-rbac.yaml  || true
      - kubectl apply -f cluster-autoscaler.yml --wait
    {%- endif -%}
    {%- if addons['togprom'] %}
      - helm install -n aws-appmesh --namespace appmesh-system https://github.com/PaulMaddox/aws-appmesh-helm/releases/latest/download/aws-appmesh.tgz
      - kubectl get pods -n appmesh-system
      - kubectl label namespace appmesh-system appmesh.k8s.aws/sidecarInjectorWebhook=enabled
    {% endif %}